Guide d’utilisation de la plateforme d’examen en ligne

Prérequis : Node.js version 14 ou supérieure, npm, Docker et Docker Compose installés, connexion Internet.

Installation et démarrage :
-Cloner le dépôt avec git:
    git clone https://github.com/projet-JS/project_js.git
-accéder au dossier:
    cd online-exam-platform
-lancer « docker compose up -d » pour démarrer MongoDB et Mongo Express:
    docker compose up -d
-se rendre ensuite dans le dossier backend, 
-exécuter « npm install » puis « node server.js »:
    cd backend
    npm install
    node server.js
Le serveur écoute sur le port 3000.

Inscription :
-Ouvrir [http://localhost:3000/register.html] dans un navigateur, 
-renseigner tous les champs demandés (email, mot de passe, nom, prénom, date de naissance, sexe, établissement, filière) 
-puis cliquer sur « Créer un compte ». 
En cas de succès, redirection vers la page de transition.

Connexion :
Ouvrir [http://localhost:3000] ou login.html, 
-saisir l’email et le mot de passe, 
-cliquer sur « Se connecter ». 
En cas de succès, redirection vers la page de transition.

Page de transition :
Deux choix possibles : 
--Pass an Exam pour passer un examen existant 
--ou Create an Exam pour créer un nouvel examen.

Création d’examen :
Sur la page Create Exam, remplir le titre de l’examen, la description et le public visé. 
Utiliser le bouton + Add Question pour ajouter des questions, Preview pour prévisualiser et Finish pour terminer et enregistrer l’examen.

Passage d’examen :
Après avoir cliqué sur Pass an Exam, choisir l’examen voulu dans la liste.
Le timer et le scoring se lancent automatiquement.

Gestion des erreurs :
Les erreurs de formulaire et d’authentification s’affichent sous forme d’alertes et dans la console. 
En cas d’erreur serveur, consulter la console du navigateur et les logs dans server.js.

Personnalisation et extension :
Modifier les fichiers CSS (style.css, login.css, transition.css, examen.css) et JS (register.js, login.js, transition.js, examen.js) selon vos besoins. 
Ajouter ou adapter des routes dans server.js pour étendre l’API.

Pour toute question, ouvrir une issue sur le dépôt GitHub ou contacter l’équipe de développement.

MERCI